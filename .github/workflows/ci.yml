name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1.1.0
      with:
        version: 13

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: |
        # This also runs a build as part of the postinstall
        # bootstrap
        yarn --ignore-engines --frozen-lockfile

    - name: Typecheck all packages
      run: |
        # Note that this command *also* typechecks tests/tools,
        # whereas the build only checks src files
        yarn typecheck

    - name: Check code formatting
      run: |
        yarn format-check

    - name: Run unit tests
      run: |
        yarn test

    - name: Run integration tests
      run: |
        yarn integration-tests

    - name: Publish code coverage report
      run: |
        bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}
