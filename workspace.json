{
  "version": 2,
  "projects": {
    "builder": {
      "root": "packages/builder",
      "type": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/builder/dist"],
          "options": {
            "cwd": "packages/builder",
            "parallel": false,
            "commands": [
              "npx rimraf ./dist",
              "npx tsc --project tsconfig.build.json",
              "terser ./dist/index.js --output=./dist/index.js",
              "ncp src/schema.json dist/schema.json"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/builder/coverage"],
          "options": {
            "cwd": "packages/builder",
            "parallel": false,
            "commands": ["npx jest --coverage"]
          }
        },
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/builder",
            "parallel": false,
            "commands": ["npx rimraf ./dist"]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/builder",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        }
      }
    },
    "eslint-plugin": {
      "root": "packages/eslint-plugin",
      "type": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/eslint-plugin/dist"],
          "options": {
            "cwd": "packages/eslint-plugin",
            "parallel": false,
            "commands": [
              "npx rimraf ./dist",
              "npx microbundle --tsconfig tsconfig.build.json --no-sourcemap --target=node --compress --format=cjs",
              "npx ncp ./src/configs ./dist/configs"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/eslint-plugin/coverage"],
          "options": {
            "cwd": "packages/eslint-plugin",
            "parallel": false,
            "commands": ["npx jest --coverage"]
          }
        },
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/eslint-plugin",
            "parallel": false,
            "commands": ["npx rimraf ./dist"]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/eslint-plugin",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        },
        "check-configs": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/eslint-plugin",
            "parallel": false,
            "commands": [
              "npx jest tests/configs.test.ts --runTestsByPath --runInBand"
            ]
          }
        }
      }
    },
    "eslint-plugin-template": {
      "root": "packages/eslint-plugin-template",
      "type": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/eslint-plugin-template/dist"],
          "options": {
            "cwd": "packages/eslint-plugin-template",
            "parallel": false,
            "commands": [
              "npx rimraf ./dist",
              "npx microbundle --tsconfig tsconfig.build.json --no-sourcemap --target=node --compress --format=cjs",
              "npx ncp ./src/configs ./dist/configs"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/eslint-plugin-template/coverage"],
          "options": {
            "cwd": "packages/eslint-plugin-template",
            "parallel": false,
            "commands": ["npx nx build template-parser", "npx jest --coverage"]
          }
        },
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/eslint-plugin-template",
            "parallel": false,
            "commands": ["npx rimraf ./dist"]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/eslint-plugin-template",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        },
        "check-configs": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/eslint-plugin-template",
            "parallel": false,
            "commands": [
              "npx jest tests/configs.test.ts --runTestsByPath --runInBand"
            ]
          }
        }
      }
    },
    "integration-tests": {
      "root": "packages/integration-tests",
      "type": "library",
      "targets": {
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": [
              "npx rimraf tmp",
              "npx rimraf fixtures/**/node_modules"
            ]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        },
        "kill-existing-verdaccio": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": ["kill $(lsof -t -i:4872) || true"]
          }
        },
        "reset-verdaccio-storage": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": ["npx rimraf tmp/local-registry/storage"]
          }
        },
        "spawn-and-populate-local-registry": {
          "dependsOn": [
            {
              "target": "kill-existing-verdaccio",
              "projects": "self"
            },
            {
              "target": "reset-verdaccio-storage",
              "projects": "self"
            }
          ],
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "commands": [
              "npx ts-node --project tsconfig.tools.json spawn-and-populate-local-registry.ts"
            ],
            "readyWhen": "Publishing complete"
          }
        }
      }
    },
    "integration-tests-suite-1": {
      "root": "packages/integration-tests",
      "type": "library",
      "targets": {
        "integration-test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": [
              "[ \"{args.withRegistry}\" = \"true\" ] && npx nx spawn-and-populate-local-registry integration-tests || true",
              "npx jest tests/v1123-multi-project-manual-config.test.ts"
            ]
          }
        }
      }
    },
    "integration-tests-suite-2": {
      "root": "packages/integration-tests",
      "type": "library",
      "targets": {
        "integration-test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": [
              "[ \"{args.withRegistry}\" = \"true\" ] && npx nx spawn-and-populate-local-registry integration-tests || true",
              "npx jest tests/v12-new-workspace.test.ts"
            ]
          }
        }
      }
    },
    "integration-tests-suite-3": {
      "root": "packages/integration-tests",
      "type": "library",
      "targets": {
        "integration-test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": [
              "[ \"{args.withRegistry}\" = \"true\" ] && npx nx spawn-and-populate-local-registry integration-tests || true",
              "npx jest tests/v1123-multi-project-yarn-auto-convert.test.ts"
            ]
          }
        }
      }
    },
    "integration-tests-suite-4": {
      "root": "packages/integration-tests",
      "type": "library",
      "targets": {
        "integration-test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": [
              "[ \"{args.withRegistry}\" = \"true\" ] && npx nx spawn-and-populate-local-registry integration-tests || true",
              "npx jest tests/v1123-single-project-yarn-auto-convert.test.ts"
            ]
          }
        }
      }
    },
    "integration-tests-suite-5": {
      "root": "packages/integration-tests",
      "type": "library",
      "targets": {
        "integration-test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/integration-tests",
            "parallel": false,
            "commands": [
              "[ \"{args.withRegistry}\" = \"true\" ] && npx nx spawn-and-populate-local-registry integration-tests || true",
              "npx jest tests/v1123-strict-multi-project-auto-convert.test.ts"
            ]
          }
        }
      }
    },
    "schematics": {
      "root": "packages/schematics",
      "type": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/schematics/dist"],
          "options": {
            "cwd": "packages/schematics",
            "parallel": false,
            "commands": [
              "npx ncp ../../node_modules/@schematics/angular/application/schema.json src/application/schema.json",
              "npx ncp ../../node_modules/@schematics/angular/library/schema.json src/library/schema.json",
              "npx rimraf ./dist",
              "npx tsc -p tsconfig.json",
              "npx ncp src/collection.json dist/collection.json",
              "npx ncp src/migrations.json dist/migrations.json",
              "npx ncp src/ng-add/schema.json dist/ng-add/schema.json",
              "npx ncp src/convert-tslint-to-eslint/schema.json dist/convert-tslint-to-eslint/schema.json",
              "npx ncp src/application/schema.json dist/application/schema.json",
              "npx ncp src/library/schema.json dist/library/schema.json",
              "npx ncp src/workspace/schema.json dist/workspace/schema.json",
              "npx ncp src/add-eslint-to-project/schema.json dist/add-eslint-to-project/schema.json"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/schematics/coverage"],
          "options": {
            "cwd": "packages/schematics",
            "parallel": false,
            "commands": ["npx jest --coverage"]
          }
        },
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/schematics",
            "parallel": false,
            "commands": ["npx rimraf ./dist"]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/schematics",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        }
      }
    },
    "template-parser": {
      "root": "packages/template-parser",
      "type": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/template-parser/dist"],
          "options": {
            "cwd": "packages/template-parser",
            "parallel": false,
            "commands": [
              "npx rimraf ./dist",
              "microbundle --tsconfig tsconfig.build.json --no-sourcemap --target=node --compress --format=cjs"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/template-parser/coverage"],
          "options": {
            "cwd": "packages/template-parser",
            "parallel": false,
            "commands": ["npx jest --coverage"]
          }
        },
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/template-parser",
            "parallel": false,
            "commands": ["npx rimraf ./dist"]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/template-parser",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        }
      }
    },
    "utils": {
      "root": "packages/utils",
      "type": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": ["packages/utils/dist"],
          "options": {
            "cwd": "packages/utils",
            "parallel": false,
            "commands": ["npx rimraf ./dist", "tsc"]
          }
        },
        "clean": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/utils",
            "parallel": false,
            "commands": ["npx rimraf ./dist"]
          }
        },
        "typecheck": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "packages/utils",
            "parallel": false,
            "commands": ["npx tsc -p tsconfig.json --noEmit"]
          }
        }
      }
    }
  }
}
